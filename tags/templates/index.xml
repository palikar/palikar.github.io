<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>templates on SA</title>
    <link>https://palikar.github.io/tags/templates/</link>
    <description>Recent content in templates on SA</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Dec 2019 00:12:08 +0100</lastBuildDate>
    
	<atom:link href="https://palikar.github.io/tags/templates/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generic Execution Around Pointer</title>
      <link>https://palikar.github.io/posts/generic_execution_around_pointer/</link>
      <pubDate>Thu, 05 Dec 2019 00:12:08 +0100</pubDate>
      
      <guid>https://palikar.github.io/posts/generic_execution_around_pointer/</guid>
      <description>Abstract I recently found out what the Execute-Around_Pointer idiom in C++ is. What it does is track access to a specific object. For example, when you want to observe how certain properties of an object change on each method call, you would employ the use of this idiom. Think of it like wrapping each method call for an object with additional function calls. This, for empale, is ugly code:</description>
    </item>
    
  </channel>
</rss>