<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on SA Dev</title>
    <link>https://palikar.github.io/categories/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on SA Dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Jul 2018 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://palikar.github.io/categories/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; things to think about while programming</title>
      <link>https://palikar.github.io/posts/cpp_tips/</link>
      <pubDate>Fri, 27 Jul 2018 00:00:00 +0200</pubDate>
      
      <guid>https://palikar.github.io/posts/cpp_tips/</guid>
      <description>Abstract C++ is hard! C++ is even harder when you want to write good code. There are a lot of things to think about when your write C++ code and if you don&amp;rsquo;t think about them, you are probable going to mess things up. Recently I found that one good book (see references) that gives 42(hehe!) concrete tips on how to be a better c++ programmer. This is my summery of sorts about the contents of said book.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; things to think about while programming</title>
      <link>https://palikar.github.io/projects/cpp_tips/</link>
      <pubDate>Fri, 27 Jul 2018 00:00:00 +0200</pubDate>
      
      <guid>https://palikar.github.io/projects/cpp_tips/</guid>
      <description>Abstract C++ is hard! C++ is even harder when you want to write a good code. There are a lot of things to think about when your write code and if you don&amp;rsquo;t think about them, you are probable going to mess things up. Recently I&amp;rsquo;ve found that one good book (see references) that gives 42 (hehe!) concrete tips on how to be a better c++ programmer. This is my summary of sorts about the contents of said book.</description>
    </item>
    
    <item>
      <title>C&#43;&#43; Template Specialization</title>
      <link>https://palikar.github.io/posts/cpp_template_specialization/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0200</pubDate>
      
      <guid>https://palikar.github.io/posts/cpp_template_specialization/</guid>
      <description>Abstract C++ is awesome! I am starting strong here but it really is. When experienced (and crazy) enough one can implement everything and the same one can do it incredibly efficient at run time (cuz who cares how much work does the compiler do for us). I can rant about how c++ is the best and all of the great features of the language but for this article I would constraint myself to one particular (but rather big) - template meta-programming!</description>
    </item>
    
  </channel>
</rss>